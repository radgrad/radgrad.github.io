(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{118:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return u}));var r=t(1),s=t(6),o=(t(0),t(175)),a={title:"RadGrad Patterns",sidebar_label:"RadGrad Patterns"},c={id:"radgrad2/developer/radgrad-patterns",title:"RadGrad Patterns",description:"Here are some of the best practices we are using in RadGrad.\r",source:"@site/docs\\radgrad2\\developer\\radgrad-patterns.md",permalink:"/docs/radgrad2/developer/radgrad-patterns",sidebar_label:"RadGrad Patterns",sidebar:"someSidebar",previous:{title:"Organization of radgrad.org",permalink:"/docs/radgrad2/developer/radgrad.org"},next:{title:"App State and Redux",permalink:"/docs/radgrad2/developer/redux"}},i=[{value:"Use exported constants instead of Strings",id:"use-exported-constants-instead-of-strings",children:[]},{value:"Publications and Subscriptions",id:"publications-and-subscriptions",children:[]}],l={rightToc:i};function u(e){var n=e.components,t=Object(s.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Here are some of the best practices we are using in RadGrad."),Object(o.b)("h2",{id:"use-exported-constants-instead-of-strings"},"Use exported constants instead of Strings"),Object(o.b)("p",null,"An example of this is in RadGrad2's redux directory. Each type is an exported constant."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"// redux/student/degree-planner/types.ts\nexport const SELECT_COURSE = 'radgrad/student/degree-planner/SELECT_COURSE';\nexport const SELECT_COURSE_INSTANCE = 'radgrad/student/degree-planner/SELECT_COURSE_INSTANCE';\n\n// redux/student/degree-planner/actions.ts\nimport * as TYPES from './types';\n\nexport const selectCourse = (courseID) => ({\n  type: TYPES.SELECT_COURSE,\n  payload: courseID,\n});\n\nexport const selectCourseInstance = (courseInstanceID) => ({\n  type: TYPES.SELECT_COURSE_INSTANCE,\n  payload: courseInstanceID,\n});\n\n// redux/student/degree-planner/reducers.ts\nimport { combineReducers } from 'redux';\nimport * as TYPES from './types';\n\nconst initialState = {\n  depInspector: {\n    selectedCourseID: '',\n    selectedCourseInstanceID: '',\n    selectedOpportunityID: '',\n    selectedOpportunityInstanceID: '',\n  },\n  depTab: {\n    selectedTab: TYPES.SELECT_PLAN,\n  },\n};\n\nfunction inspectorReducer(state: any = initialState, action) {\n  // console.log('inspectorReducer', action, state);\n  const depInspector = state.depInspector;\n  switch (action.type) {\n    case TYPES.SELECT_COURSE:\n      return {\n        ...state,\n        depInspector: {\n          ...depInspector,\n          selectedCourseID: action.payload,\n          selectedCourseInstanceID: '',\n          selectedOpportunityID: '',\n          selectedOpportunityInstanceID: '',\n        },\n      };\n    case TYPES.SELECT_COURSE_INSTANCE:\n      // console.log('select ci ', action);\n      return {\n        ...state,\n        depInspector: {\n          ...depInspector,\n          selectedCourseID: '',\n          selectedCourseInstanceID: action.payload,\n          selectedOpportunityID: '',\n          selectedOpportunityInstanceID: '',\n        },\n      };\n   }\n}\n")),Object(o.b)("p",null,"We are using the exported types instead of strings to ensure there are no typo errors."),Object(o.b)("h2",{id:"publications-and-subscriptions"},"Publications and Subscriptions"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"BaseCollection")," defines default ",Object(o.b)("inlineCode",{parentName:"p"},"publish")," and ",Object(o.b)("inlineCode",{parentName:"p"},"subscribe")," methods."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"  /**\n   * Default publication method for entities.\n   * It publishes the entire collection.\n   */\n  public publish() {\n    if (Meteor.isServer) {\n      Meteor.publish(this.collectionName, () => this.collection.find());\n    }\n  }\n\n  /**\n   * Default subscription method for entities.\n   * It subscribes to the entire collection.\n   */\n  public subscribe(userID = undefined) {\n    if (Meteor.isClient) {\n      return Meteor.subscribe(this.collectionName, userID);\n    }\n    return null;\n  }\n")),Object(o.b)("p",null,"We publish and subscribe to the entire collection. In the ",Object(o.b)("inlineCode",{parentName:"p"},"subscribe")," method we return the handle to the subscription, so the client can wait till the subscription is ready. We use the optional ",Object(o.b)("inlineCode",{parentName:"p"},"userID")," parameter to support filtered collections such as the ",Object(o.b)("inlineCode",{parentName:"p"},"CourseInstanceCollection"),": "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"  /**\n   * Depending on the logged in user publish only their CourseInstances. If\n   * the user is in the Role.ADMIN then publish all CourseInstances.\n   */\n  public publish() {\n    if (Meteor.isServer) {\n      const instance = this;\n      Meteor.publish(this.collectionName, function filterStudentID(studentID) {\n        if (_.isNil(studentID)) {\n          return this.ready();\n        }\n        const profile = Users.getProfile(studentID);\n        if (profile.role === ROLE.ADMIN || Meteor.isAppTest) {\n          return instance.collection.find();\n        }\n        return instance.collection.find({ studentID, retired: { $not: { $eq: true } } });\n      });\n      Meteor.publish(this.publicationNames.scoreboard, function publishCourseScoreboard() {\n        ReactiveAggregate(this, instance.collection, [\n          {\n            $addFields: { courseTerm: { $concat: ['$courseID', ' ', '$termID'] } },\n          },\n          {\n            $group: {\n              _id: '$courseTerm',\n              count: { $sum: 1 },\n            },\n          },\n          { $project: { count: 1, termID: 1, courseID: 1 } },\n        ], { clientCollection: CourseScoreboardName });\n      });\n    }\n  }\n")),Object(o.b)("p",null,"When the client subscribes to the CourseInstanceCollection they can supply the userID to only get the Course Instances for that user."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"handles.push(instanceSubs.subscribe(CourseInstances.getCollectionName(), userID));\n")),Object(o.b)("p",null,"If a client wants to subscribe to the Course Scoreboard, they use"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),"handles.push(globalSubs.subscribe(CourseInstances.publicationNames.scoreboard));\n")))}u.isMDXComponent=!0},175:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return f}));var r=t(0),s=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var l=s.a.createContext({}),u=function(e){var n=s.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},p=function(e){var n=u(e.components);return s.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return s.a.createElement(s.a.Fragment,{},n)}},b=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(t),b=r,f=p["".concat(a,".").concat(b)]||p[b]||d[b]||o;return t?s.a.createElement(f,c({ref:n},l,{components:t})):s.a.createElement(f,c({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=b;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<o;l++)a[l]=t[l];return s.a.createElement.apply(null,a)}return s.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);